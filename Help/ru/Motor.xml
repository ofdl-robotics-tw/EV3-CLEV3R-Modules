<?xml version="1.0"?>
<doc>
  <members>

    <member name="T:Motor">
      <summary>
        Управление моторами, подключенными к блоку EV3. Для функции Motor необходимо указать один или несколько портов, к которым подключены моторы, например "A", "BC", "ABD".
        Для блоков, подключенных к главному блоку по USB порты указываются так: "3BC", "2A". В этом режиме только двигатели одного блока доступны в одной команде.
        Скорость и Мощность - разные понятия. При вызове команды для вращения мотора с постоянной скоростью, электрическая мощность, подаваемая на него будет автоматически регулироваться, чтобы поддерживать заданную скорость.
        При вызове команды для вращения мотора с постоянной мощностью, его скорость будет зависеть от сопротивления, которое он испытывает во время работы.
      </summary>
    </member>

    <member name="M:Stop">
      <summary>
        Остановить один или несколько моторов. Команда завершает так же все запланированные или незавершенные команды управления этими моторами.
      </summary>
      <param name="ports">Порт(ы) моторов</param>
      <param name="brake">"True", если следует затормозить и удерживать положение моторов после завершения движения.</param>
    </member>

    <member name="M:Start">
      <summary>
        Запустить один или несколько моторов с указанной скоростью или изменить скорость уже запущенных моторов на указанную.
      </summary>
      <param name="ports">Порт(ы) моторов</param>
      <param name="speed">Скорость от -100 (полный назад) до 100 (полный вперед).</param>
    </member>

    <member name="M:StartPower">
      <summary>
        Запустить один или несколько моторов с указанной мощностью или изменить мощность уже запущенных моторов на указанную.
      </summary>
      <param name="ports">Порт(ы) моторов</param>
      <param name="power">Мощность от -100 (полный назад) до 100 (полный вперед).</param>
    </member>

    <member name="M:StartSync">
      <summary>
        Синхронно запустить два мотора с указанными скоростями в режиме контроля за их вращением.
        Если один мотор будет испытывать нагрузку, которая замедлит его скорость, второй мотор пропорционально замедлится, чтобы сохранить траекторию движения.
      </summary>
      <param name="ports">Имена двух портов для моторов (например "AB" или "CD").</param>
      <param name="speed1">Скорость от -100 (полный назад) до 100 (полный вперед) мотора с младшим по алфавиту номером порта</param>
      <param name="speed2">Скорость от -100 (полный назад) до 100 (полный вперед) мотора со старшим по алфавиту номером порта</param>
    </member>

    <member name="M:GetSpeed">
      <summary>
        Получить текущую скорость мотора
      </summary>
      <param name="port">Порт мотора</param>
      <returns>Текущая скорость в диапазоне от -100 до 100</returns>
    </member>

    <member name="M:IsBusy">
      <summary>
        Проверить один или несколько моторов на занятость.
      </summary>
      <param name="ports">Порты моторов</param>
      <returns>"True" если хотя бы один из моторов запущен, "False" в противном случае.</returns>
    </member>

    <member name="M:Schedule">
      <summary>
        Запустить один или несколько моторов с указанной скоростью с возможностью плавного старта и плавного замедления.
        Скорость может регулироваться в пределах общего угла поворота, в Зоне1 двигатель ускоряется до указанной скорости, в Зоне2 поддерживает ее, в Зоне3 - замедляется до полной остановки.
        Полный угол, на который повернется мотор - это сумма углов поворота Зона1 + Зона2 + Зона3.
        Команда передает управление в программу сразу, не ждет, пока мотор повернется. Чтобы отследить окончания отработки команды, используйте IsBusy(). Чтобы дождаться конца, пока мотор закончит отработку команды - используй Wait().
      </summary>
      <param name="ports">Порты моторов</param>
      <param name="speed">Скорость от -100 (полный назад) до 100 (полный вперед)</param>
      <param name="degrees1">Зона1: угол поворота мотора, в пределах которой он ускоряется</param>
      <param name="degrees2">Зона2: угол поворота мотора, в пределах которой он поддерживает указанную скорость</param>
      <param name="degrees3">Зона3: угол поворота мотора, в пределах которой он плавно замедляется до полной остановки</param>
      <param name="brake">"True", если следует затормозить и удерживать положение моторов после завершения движения.</param>
    </member>

    <member name="M:SchedulePower">
      <summary>
        Запустить один или несколько моторов с указанной мощностью с возможностью плавного старта и плавного замедления.
        Мощность может регулироваться в пределах общего угла поворота, в Зоне1 двигатель плавно наращивает мощность до указанной, в Зоне2 поддерживает ее, в Зоне3 - плавно уменьшает подаваемую мощность до полной остановки.
        Полный угол, на который повернется мотор - это сумма углов поворота Зона1 + Зона2 + Зона3.
        Команда передает управление в программу сразу, не ждет, пока мотор повернется. Чтобы отследить окончания отработки команды, используйте IsBusy(). Чтобы дождаться конца, пока мотор закончит отработку команды - используй Wait().
      </summary>
      <param name="ports">Порты моторов</param>
      <param name="power">Мощность от -100 (полный назад) до 100 (полный вперед)</param>
      <param name="degrees1">Зона1: угл поворота мотора, в пределах которой он разгоняется</param>
      <param name="degrees2">Зона2: угл поворота мотора, в пределах которой он поддерживает указанную мощность</param>
      <param name="degrees3">Зона3: угл поворота мотора, в пределах которой он плавно замедляется до полной остановки</param>
      <param name="brake">"True", если следует затормозить и удерживать положение моторов после завершения движения.</param>
    </member>

    <member name="M:ScheduleSync">
      <summary>
        Поворачивает два мотора синхронно на определенное количество градусов.
        Синхронная работа двигателей означает, что когда один двигатель нагружен и что-то препятствует его вращению, второй двигатель пропорционально замедлится или даже вообще остановится.
        Это команда особенно полезна для для роботов с двумя независимыми колесами - для возможности сохранить траекторию движения.
        Угол, на который будет повернуты моторы относится к мотору с наибольшей скоростью вращения, угол поворота второго мотора будет рассчитан пропорционально его скорости.
        Команда передает управление в программу сразу, не ждет, пока мотор повернется. Чтобы отследить окончания отработки команды, используйте IsBusy(). Чтобы дождаться конца, пока мотор закончит отработку команды - испольузйте Wait().
      </summary>
      <param name="ports">Имена двух портов для моторов (например "AB" или "CD")</param>
      <param name="speed1">Скорость от -100 (полный назад) до 100 (полный вперед) мотора с младшим по алфавиту номером порта</param>
      <param name="speed2">Скорость от -100 (полный назад) до 100 (полный вперед) мотора со старшим по алфавиту номером порта</param>
      <param name="degrees">Угол поворота (мотора с наибольшей скоростью)</param>
      <param name="brake">"True", если следует затормозить и удерживать положение моторов после завершения движения.</param>
    </member>

    <member name="M:ResetCount">
      <summary>
        Сбросить счетчик оборотов одного или несколько моторов до 0.
      </summary>
      <param name="ports">Порты моторов</param>
    </member>

    <member name="M:GetCount">
      <summary>
        Получить данные счетчика оборота с указанного мотора.
        Счетчик оборотов работает даже если мотор вращается не по командам блока EV3, а путем приложения внешней силы.
      </summary>
      <param name="port">Порт мотора</param>
      <returns>Текущее значение счетчика оборотов мотора в градусах</returns>
    </member>

    <member name="M:Move">
      <summary>
        Поворачивает один или несколько моторов с заданной скоростью на указанный угол (в градусах).
        Программа не будет переходить к выполнению следующих команд до тех пор, пока моторы не повернутся на требуемый угол.
        Если нужно больше возможностей по управлению моторами, например плавный старт и замедление, используй команду Motor.Schedule
      </summary>
      <param name="ports">Порты моторов</param>
      <param name="speed">Скорость от -100 (полный назад) до 100 (полный вперед)</param>
      <param name="degrees">Угол поворота</param>
      <param name="brake">"True", если следует затормозить и удерживать положение моторов после завершения движения.</param>
    </member>

    <member name="M:MovePower">
      <summary>
        Поворачивает один или несколько моторов с заданной мощностью на указанный угол (в градусах).
        Программа не будет переходить к выполнению следующих команд до тех пор, пока моторы не повернутся на требуемый угол.
        Если тебе нужно больше возможностей по управлению моторами, например плавное наращивание мощности или ее уменьшение, используй команду Motor.SchedulePower
      </summary>
      <param name="ports">Порты моторов</param>
      <param name="power">Мощность от -100 (полный назад) до 100 (полный вперед)</param>
      <param name="degrees">Угол поворота</param>
      <param name="brake">"True", если следует затормозить и удерживать положение моторов после завершения движения.</param>
    </member>

    <member name="M:MoveSync">
      <summary>
        Поворачивает два мотора синхронно на определенное количество градусов.
        Синхронная работа двигателей означает, что когда один двигатель нагружен и что-то препятствует его вращению, второй двигатель пропорционально замедлится или даже вообще остановится.
        Это команда особенно полезна для роботов с двумя независимыми колесами - для возможности сохранить траекторию движения.
        Угол, на который будет повернуты моторы относится к мотору с наибольшей скоростью вращения, угол поворота второго мотора будет рассчитан пропорционально его скорости.
      </summary>
      <param name="ports">Имена двух портов для моторов (например "AB" или "CD")</param>
      <param name="speed1">Скорость от -100 (полный назад) до 100 (полный вперед) мотора с младшим по алфавиту номером порта</param>
      <param name="speed2">Скорость от -100 (полный назад) до 100 (полный вперед) мотора со старшим по алавиту номером порта</param>
      <param name="degrees">Угол поворота (мотора с наибольшей скоростью)</param>
      <param name="brake">"True", если следует затормозить и удерживать положение моторов после завершения движения.</param>
    </member>

    <member name="M:StartSteer">
      <summary>
        Устанивливает два двигателя для работы с заданной скоростью и относительным направлением.
        Соотношение определяется параметром «Turn», который определяет направление робота с простым приводом на два колеса (учитывая, что последний двигатель установлен слева).
        Двигатели будут синхронизированы, что означает, что если один двигатель испытывает некоторое сопротивление и не может поддерживать свою скорость, другой двигатель также будет замедляться или вообще останавливаться. Это особенно полезно для роботов с двумя независимыми колесами, которые должны идти прямо или совершать определенный поворот.
        Двигатели будут продолжать работать, пока управление не перехватит другая команда.
      </summary>
      <param name="ports">Имена двух моторов (например, "AB" или "CD").</param>
      <param name="speed">Скорость от -100 (полный вперед) до 100 (полный вперед) более быстрого двигателя.</param>
      <param name="turn">Коэффициент поворота от -100 (вращение влево на месте) до 100 (вращение вправо на месте).</param>
    </member>

    <member name="M:ScheduleSteer">
      <summary>
        Включает два двигателя для работы с заданной скоростью и относительным направлением.
        Соотношение определяется параметром «Turn», который определяет направление робота с простым приводом на два колеса (учитывая, что последний двигатель установлен слева).
        Двигатели будут синхронизированы, что означает, что если один двигатель испытывает некоторое сопротивление и не может поддерживать свою скорость, другой двигатель также будет замедляться или вообще останавливаться. Это особенно полезно для роботов с двумя независимыми колесами, которые должны идти прямо или совершать определенный поворот.
        Команда передает управление в программу сразу, не ждет, пока мотор повернется. Чтобы отследить окончания отработки команды, используйте IsBusy(). Чтобы дождаться конца, пока мотор закончит отработку команды - испольузйте Wait().
      </summary>
      <param name="ports">Имена двух моторов (например, "AB" или "CD").</param>
      <param name="speed">Скорость от -100 (полный вперед) до 100 (полный вперед) более быстрого двигателя.</param>
      <param name="turn">Коэффициент поворота от -100 (вращение влево на месте) до 100 (вращение вправо на месте).</param>
      <param name="degrees">Угол, на который должен повернуться более быстрый мотор.</param>
      <param name="brake">"True", если следует затормозить и удерживать положение моторов после завершения движения.</param>
    </member>

    <member name="M:MoveSteer">
      <summary>
        Включает два двигателя для работы с заданной скоростью и относительным направлением.
        Соотношение определяется параметром «Turn», который определяет направление робота с простым приводом на два колеса (учитывая, что последний двигатель установлен слева).
        Двигатели будут синхронизированы, что означает, что если один двигатель испытывает некоторое сопротивление и не может поддерживать свою скорость, другой двигатель также будет замедляться или вообще останавливаться. Это особенно полезно для роботов с двумя независимыми колесами, которые должны идти прямо или совершать определенный поворот.
        Угол перемещения для двигателя с более высокой скоростью.
      </summary>
      <param name="ports">Имена двух моторов (например, "AB" или "CD").</param>
      <param name="speed">Скорость от -100 (полный вперед) до 100 (полный вперед) более быстрого двигателя.</param>
      <param name="turn">Коэффициент поворота от -100 (вращение влево на месте) до 100 (вращение вправо на месте).</param>
      <param name="degrees">Угол, на который должен повернуться более быстрый мотор.</param>
      <param name="brake">"True", если следует затормозить и удерживать положение моторов после завершения движения.</param>
    </member>

    <member name="M:Invert">
      <summary>
        Инвертирует полярность (направление) одного или нескольких двигателей. Это повлияет на все будущие команды, которые управляют этими двигателями, а также инвертируются показания энкодера и скорости.
        Эта операция позволяет легко изменить направление вращения двигателя без изменения остальной части программы.
        Вам просто нужно добавить одну команду Motor.Invert() в самом начале программы. Обратите внимание, что далее нельзя будет отключить инверсию.
      </summary>
      <param name="ports">Номер порта мотора(ов)</param>
    </member>

    <member name="M:Wait">
      <summary>
        Подождать, пока моторы не закончат выполнять команды Schedule, Move.
        Использование этой команды, как правило, лучше, чем вызов IsBusy() в цикле.
      </summary>
      <param name="ports">Порты моторов</param>
    </member>

  </members>
</doc>