<?xml version="1.0"?>
<doc>
  <members>
    <member name="T:Byte">
      <summary>
        Манипуляция отдельными битами 8-битовых чисел. Эта библиотека позволяет обрабатывать числа так, как если бы они были организованы в виде 8-битных целочисленных значений («байты»). Для этого значения параметра всегда преобразуются в простые байты, затем выполняется запрошенная операция, а затем результат преобразуется обратно в формат Basic Plus.
        Поддерживаются обычные битовые операции: AND, OR, NOT, XOR, разные сдвиги и операции преобразования данных. Обратите внимание, что идентификаторы AND и OR являются зарезервированными словами Basic Plus, поэтому эти операции называются AND_ и OR_.
      </summary>
    </member>
    <member name="M:NOT">
      <summary>
        Побитовое NOT.
      </summary>
      <param name="value">Число для отрицания</param>
      <returns>Число, получаемое, когда каждый бит входного байта индивидуально инвертируется</returns>
    </member>
    <member name="M:AND_">
      <summary>
        Побитовое AND.
      </summary>
      <param name="a">Первый операнд</param>
      <param name="b">Второй операнд</param>
      <returns>Число, получаемое, когда между каждыми битами входных чисел выполняется логическое «И»</returns>
    </member>
    <member name="M:OR_">
      <summary>
        Побитовое OR.
      </summary>
      <param name="a">Первый операнд</param>
      <param name="b">Второй операнд</param>
      <returns>Число, получаемое, когда между каждыми битами входных чисел выполняется логическое «ИЛИ»</returns>
    </member>
    <member name="M:XOR">
      <summary>
        Побитовое XOR.
      </summary>
      <param name="a">Первый операнд</param>
      <param name="b">Второй операнд</param>
      <returns>Число, получаемое, когда между каждыми битами входных чисел выполняется исключающее «ИЛИ»</returns>
    </member>
    <member name="M:BIT">
      <summary>
        Извлекает один бит из байта.
      </summary>
      <param name="value">Байтовое число, из которого извлекается бит</param>
      <param name="index">Позиция бита внутри байта</param>
      <returns>Бит в указанной позиции, который равен 0 или 1</returns>
    </member>
    <member name="M:SHL">
      <summary>
        Побитовый сдвиг влево.
      </summary>
      <param name="value">Байт, чьи биты будут сдвинуты</param>
      <param name="distance">На сколько позиций будут смещены биты</param>
      <returns>Число, которое вы получаете после перемещения каждого бита входного значения в сторону более значимых позиций</returns>
    </member>
    <member name="M:SHR">
      <summary>
        Побитовый сдвиг вправо.
      </summary>
      <param name="value">Байт, чьи биты будут сдвинуты</param>
      <param name="distance">На сколько позиций будут смещены биты</param>
      <returns>Число, которое вы получаете после перемещения каждого бита входного значения в сторону менее значимых позиций</returns>
    </member>
    <member name="M:ToHex">
      <summary>
        Преобразование 8-битового байта в строку, содержащую двухзначное шестнадцатеричное число.
      </summary>
      <param name="value">Байт для преобразования в строку</param>
      <returns>Строка, содержащая двухзначное шестнадцатеричное число</returns>
    </member>
    <member name="M:ToBinary">
      <summary>
        Преобразование 8-битового байта в строку, содержащую восьмизначное двоичное число.
      </summary>
      <param name="value">Байт для преобразования в строку</param>
      <returns>Строка, содержащая восьмизначное двоичное число</returns>
    </member>
    <member name="M:ToLogic">
      <summary>
        Преобразует число (может быть 8-битным байтом или любым другим числом) в логическое значение "True" или "False".
        Это значение затем можно использовать для условия в If или While или чего либо еще.
        Обратите внимание, что любое входное значение больше нуля приводит к "True", а входное значение равное нулю или любое отрицательное значение приводит к "False".
      </summary>
      <param name="value">Число, которое должно быть преобразовано в соответствующее логическое значение</param>
      <returns>"True" или "False"</returns>
    </member>
    <member name="M:H">
      <summary>
        Преобразование строки, содержащей шестнадцатеричное число в обычное число.
      </summary>
      <param name="value">Строка, содержащая байт в виде шестнадцатеричного числа (Например: "4F")</param>
      <returns>Байт в виде числа</returns>
    </member>
    <member name="M:B">
      <summary>
        Преобразование строки, содержащей двоичное число в обычное число.
      </summary>
      <param name="value">Строка, содержащая байт в виде двоичного числа (Например: "01001111")</param>
      <returns>Байт в виде числа</returns>
    </member>
    <member name="M:L">
      <summary>
        Преобразование строки, содержащей логическое значение в числовые 0 или 1.
      </summary>
      <param name="value">Строка, содержащая логическое значение. Все различающиеся к регистру варианты "True" ("TRUE","TrUe", "truE", т.д.) считаются одинаковыми. Все остальные воспринимаются как "False".</param>
      <returns>0 или 1</returns>
    </member>
  </members>
</doc>