<?xml version="1.0"?>
<doc>
  <members>
    <member name="T:Thread">
      <summary>
        Набор команд, позволяющих организовать т.н. "многопоточность" при проведении вычислительных операций и управлении встроенными/подключенными периферийными устройствами (серсоры, моторы, дисплей и т.д.).
        Необходимо учитывать, что запущенные потоки остаются активными до завершения основной программы. Также невозможно запустить одну и ту же подпрограмму в параллельном режиме - при попытке повторного старта подпрограммы система будет ожидать завершения ее предыдущего вызова.
      </summary>
    </member>
    <member name="M:Yield">
      <summary>
        Приостановить выделение процессорных тактов для указанного потока. Данная команда позволяет другим потокам более эффективно распоряжаться вычислительными ресурсами.
      </summary>
    </member>
    <member name="M:CreateMutex">
      <summary>
        Создать мьютекс (сокр. от «mutual exclusion») - взаимное исключение, которое может быть использовано для синхронизации потоков. Однажды созданный мьютекс не может быть удален. 
      </summary>
      <returns>Идентификатор мьютекса. Будет использоваться в дальнейшем для блокировки и разблокировки</returns>
    </member>
    <member name="M:Lock">
      <summary>
        Попытаться перехватить управление указанным мьютексом. Если перехват произведен, другой поток уже не сможет блокировать/разблокировать данный мъютекс. Если мъютекс заблокирован другим потоком, команда Lock будет ожидать его разблокировки и лишь после успешного перехвата передаст управление другим командам потока.
      </summary>
      <param name="mutex">Идентификатор мьютекса (полученный командой CreateMutex)</param>
    </member>
    <member name="M:Unlock">
      <summary>
        Снять блокировку с указанного мьютекса. Команду можно использовать только в случае, если блокировка уже была ранее установлена.
      </summary>
      <param name="mutex">Идентификатор мьютекса (полученный командой CreateMutex)</param>
    </member>
    <member name="E:Run">
      <summary>
        Запустить указанную подпрограмму параллельным потоком. Например, "Thread.Run = MYSUB" запустит подпрограмму с именем MYSUB параллельно основной программе. 
      </summary>
    </member>
  </members>
</doc>