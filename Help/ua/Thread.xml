<?xml version="1.0"?>
<doc>
  <members>
    <member name="T:Thread">
      <summary>
        Набір команд, що дозволяють організувати т.зв. "многопоточність" при проведенні обчислювальних операцій і управлінні вбудованими/підключеними периферійними пристроями (сенсори, мотори, дисплей тощо).
        Необхідно враховувати, що запущені потоки залишаються активними до завершення основної програми. Також неможливо запустити одну і ту ж підпрограму в паралельному режимі - при спробі повторного старту підпрограми система буде очікувати завершення її попереднього виклику.
      </summary>
    </member>
    <member name="M:Yield">
      <summary>
        Призупинити виділення процесорних тактів для зазначеного потоку. Дана команда дозволяє іншим потокам більш ефективно розпоряджатися обчислювальними ресурсами.
      </summary>
    </member>
    <member name="M:CreateMutex">
      <summary>
        Створити м'ютекс (скор. Від «mutual exclusion») - взаємний виняток, який може бути використаний для синхронізації потоків. Одного разу створений м'ютекс не може бути видалений.
      </summary>
      <returns>Ідентифікатор м'ютекса. Використовуватиметься надалі для блокування і розблокування</returns>
    </member>
    <member name="M:Lock">
      <summary>
        Спробувати перехопити управління зазначеним м'ютексом. Якщо перехоплення здійснено, інший потік вже не зможе блокувати/розблокувати даний м'ютекс. Якщо м'ютекс заблокований іншим потоком, команда Lock чекатиме його розблокування і лише після успішного перехоплення передасть управління іншим командам потоку.
      </summary>
      <param name="mutex">Ідентифікатор м'ютекса (отриманий командою CreateMutex)</param>
    </member>
    <member name="M:Unlock">
      <summary>
        Зняти блокування з зазначеного м'ютекса. Команду можна використовувати тільки в разі, якщо блокування вже було встановлене раніше.
      </summary>
      <param name="mutex">Ідентифікатор м'ютекса (отриманий командою CreateMutex)</param>
    </member>
    <member name="E:Run">
      <summary>
        Запустити зазначену підпрограму паралельним потоком. Наприклад, "Thread.Run = MYSUB" запустить підпрограму з ім'ям MYSUB паралельно із основною програмою.
      </summary>
    </member>
  </members>
</doc>