<?xml version="1.0"?>
<doc>
  <members>

    <member name="T:Motor">
      <summary>
        Управління моторами, підключеними до блоку EV3. Для функції Motor необхідно вказати один або кілька портів, до яких підключені мотори, наприклад "A", "BC", "ABD".
        Для блоків, підключених до головного блоку по USB порти вказуються так: "3BC", "2A". В цьому режимі тільки двигуни одного блоку доступні в одній команді.
        Швидкість і Потужність - різні поняття. При виклику команди для обертання мотора з постійною швидкістю, електрична потужність, що подається на нього буде автоматично регулюватися, щоб підтримувати задану швидкість.
        При виклику команди для обертання мотора з постійною потужністю його швидкість буде залежати від опору, який діє на нього під час роботи.
      </summary>
    </member>

    <member name="M:Stop">
      <summary>
        Зупинити один або кілька моторів. Команда завершує також всі заплановані або незавершені команди управління цими моторами.
      </summary>
      <param name="ports">Порт(и) моторів</param>
      <param name="brake">"True", якщо слід загальмувати і утримувати положення моторів після завершення руху.</param>
    </member>

    <member name="M:Start">
      <summary>
        Запустити один або кілька моторів із вказаною швидкістю або змінити швидкість вже запущених моторів на зазначену.
      </summary>
      <param name="ports">Порт(и) моторів</param>
      <param name="speed">Швидкість від -100 (повний назад) до 100 (повний вперед).</param>
    </member>

    <member name="M:StartPower">
      <summary>
        Запустити один або кілька моторів із вказаною потужністю або змінити потужність вже запущених моторів на зазначену.
      </summary>
      <param name="ports">Порт(и) моторів</param>
      <param name="power">Потужність від -100 (повний назад) до 100 (повний вперед).</param>
    </member>

    <member name="M:StartSync">
      <summary>
        Синхронно запустити два мотора із зазначеними швидкостями в режимі контролю за їх обертанням.
        Якщо один мотор буде зазнавати навантаження, що сповільнить його швидкість, другий мотор пропорційно сповільниться, щоб зберегти траєкторію руху.
      </summary>
      <param name="ports">Імена двох портів для моторів (наприклад, "AB" або "CD").</param>
      <param name="speed1">Швидкість від -100 (повний назад) до 100 (повний вперед) мотора з молодшим за алфавітом номером порту</param>
      <param name="speed2">Швидкість від -100 (повний назад) до 100 (повний вперед) мотора зі старшим за алфавітом номером порту</param>
    </member>

    <member name="M:GetSpeed">
      <summary>
        Отримати поточну швидкість мотора
      </summary>
      <param name="port">Порт мотора</param>
      <returns>Поточна швидкість в діапазоні від -100 до 100</returns>
    </member>

    <member name="M:IsBusy">
      <summary>
        Перевірити один або кілька моторів на зайнятість.
      </summary>
      <param name="ports">Порти моторів</param>
      <returns>"True" якщо хоча б один з моторів запущений, "False" в іншому випадку.</returns>
    </member>

    <member name="M:Schedule">
      <summary>
        Запустити один або кілька моторів із вказаною швидкістю з можливістю плавного старту і плавного уповільнення.
        Швидкість може регулюватися в межах загального кута повороту: в Зоні1 двигун прискорюється до зазначеної швидкості, в Зоні2 підтримує її, в Зоні3 - сповільнюється до повної зупинки.
        Повний кут, на який повернеться мотор, - це сума кутів повороту Зона1 + Зона2 + Зона3.
        Команда передає управління в програму відразу і не чекає, поки мотор обернеться. Щоб відстежити закінчення відпрацювання команди, використовуйте IsBusy (). Щоб дочекатися кінця, поки мотор закінчить відпрацювання команди - використовуй Wait ().
      </summary>
      <param name="ports">Порти моторів</param>
      <param name="speed">Швидкість від -100 (повний назад) до 100 (повний вперед)</param>
      <param name="degrees1">Зона1: кут повороту мотора, в межах якого він прискорюється</param>
      <param name="degrees2">Зона2: кут повороту мотора, в межах якого він підтримує зазначену швидкість</param>
      <param name="degrees3">Зона3: кут повороту мотора, в межах якого він плавно сповільнюється до повної зупинки</param>
      <param name="brake">"True", якщо слід загальмувати і утримувати положення моторів після завершення руху.</param>
    </member>

    <member name="M:SchedulePower">
      <summary>
        Запустити один або кілька моторів із вказаною потужністю з можливістю плавного старту і плавного уповільнення.
        Потужність може регулюватися в межах загального кута повороту: в Зоні1 двигун плавно нарощує потужність до зазначеної, в Зоні2 підтримує її, в Зоні3 - плавно зменшує подавану потужність до повної зупинки.
        Повний кут, на який повернеться мотор - це сума кутів повороту Зона1 + Зона2 + Зона3.
        Команда передає управління в програму відразу і не чекає, поки мотор обернеться. Щоб відстежити закінчення відпрацювання команди, використовуйте IsBusy (). Щоб дочекатися кінця, поки мотор закінчить відпрацювання команди - використовуй Wait ().
      </summary>
      <param name="ports">Порти моторів</param>
      <param name="power">Потужність від -100 (повний назад) до 100 (повний вперед)</param>
      <param name="degrees1">Зона1: кут повороту мотора, в межах якого він прискорюється</param>
      <param name="degrees2">Зона2: кут повороту мотора, в межах якого він підтримує зазначену потужність</param>
      <param name="degrees3">Зона3: кут повороту мотора, в межах якого він плавно сповільнюється до повної зупинки</param>
      <param name="brake">"True", якщо слід загальмувати і утримувати положення моторів після завершення руху.</param>
    </member>

    <member name="M:ScheduleSync">
      <summary>
        Обертає два мотора синхронно на визначену кількість градусів.
        Синхронна робота двигунів означає, що коли один двигун навантажений і щось перешкоджає його обертанню, другий двигун пропорційно сповільниться або навіть взагалі зупиниться.
        Ця команда особливо корисна для для роботів з двома незалежними колесами - для можливості зберегти траєкторію руху.
        Кут, на який буде повернуті мотори, відноситься до мотору з найбільшою швидкістю обертання, кут обертання другого мотора буде розрахований пропорційно його швидкості.
        Команда передає управління в програму відразу, не чекає, поки мотор обернеться. Щоб відстежити закінчення відпрацювання команди, використовуйте IsBusy (). Щоб дочекатися кінця, поки мотор закінчить відпрацювання команди - іспольузйте Wait ().
      </summary>
      <param name="ports">Імена двох портів для моторів (наприклад "AB" або "CD")</param>
      <param name="speed1">Швидкість від -100 (повний назад) до 100 (повний вперед) мотора з молодшим за алфавітом номером порту</param>
      <param name="speed2">Швидкість від -100 (повний назад) до 100 (повний вперед) мотора зі старшим за алфавітом номером порту</param>
      <param name="degrees">Кут повороту (мотора з найбільшою швидкістю)</param>
      <param name="brake">"True", якщо слід загальмувати і утримувати положення моторів після завершення руху.</param>
    </member>

    <member name="M:ResetCount">
      <summary>
        Скинути лічильник оборотів одного або кілька моторів до 0.
      </summary>
      <param name="ports">Порти моторів</param>
    </member>

    <member name="M:GetCount">
      <summary>
        Отримати дані лічильника обороту з зазначеного мотора.
        Лічильник оборотів працює навіть якщо мотор обертається не за командами блоку EV3, а шляхом застосування зовнішньої сили.
      </summary>
      <param name="port">Порт мотора</param>
      <returns>Поточне значення лічильника обертів мотора в градусах</returns>
    </member>

    <member name="M:Move">
      <summary>
        Обертає один або кілька моторів із заданою швидкістю на вказаний кут (в градусах).
        Програма не буде переходити до виконання наступних команд до тих пір, поки мотор не повернуться на необхідний кут.
        Якщо потрібно більше можливостей з управління моторами, наприклад плавний старт і уповільнення, використовуй команду Motor.Schedule
      </summary>
      <param name="ports">Порти моторів</param>
      <param name="speed">Швидкість від -100 (повний назад) до 100 (повний вперед)</param>
      <param name="degrees">Кут повороту</param>
      <param name="brake">"True", якщо слід загальмувати і утримувати положення моторів після завершення руху.</param>
    </member>

    <member name="M:MovePower">
      <summary>
        Обертає один або кілька моторів із заданою потужністю на вказаний кут (в градусах).
        Програма не буде переходити до виконання наступних команд до тих пір, поки мотор не повернуться на необхідний кут.
        Якщо тобі потрібно більше можливостей з управління моторами, наприклад плавне нарощування потужності або її зменшення, використовуй команду Motor.SchedulePower
      </summary>
      <param name="ports">Порти моторів</param>
      <param name="power">Потужність від -100 (повний назад) до 100 (повний вперед)</param>
      <param name="degrees">Кут повороту</param>
      <param name="brake">"True", якщо слід загальмувати і утримувати положення моторів після завершення руху.</param>
    </member>

    <member name="M:MoveSync">
      <summary>
        Обертає два мотора синхронно на певну кількість градусів.
        Синхронна робота двигунів означає, що коли один двигун навантажений і щось перешкоджає його обертанню, другий двигун пропорційно сповільниться або навіть взагалі зупиниться.
        Це команда особливо корисна для роботів з двома незалежними колесами - для можливості зберегти траєкторію руху.
        Кут, на який буде повернуті мотори, відноситься до мотору з найбільшою швидкістю обертання, а кут повороту другого мотора буде розрахований пропорційно його швидкості.
      </summary>
      <param name="ports">Імена двох портів для моторів (наприклад "AB" або "CD")</param>
      <param name="speed1">Швидкість від -100 (повний назад) до 100 (повний вперед) мотора з молодшим за алфавітом номером порту</param>
      <param name="speed2">Швидкість від -100 (повний назад) до 100 (повний вперед) мотора зі старшим по алавітами номером порту</param>
      <param name="degrees">Кут повороту (мотора з найбільшою швидкістю)</param>
      <param name="brake">"True", якщо слід загальмувати і утримувати положення моторів після завершення руху.</param>
    </member>

    <member name="M:StartSteer">
      <summary>
        Вмикає два двигуна для роботи із заданою швидкістю і відносним напрямком.
        Співвідношення визначається параметром «Turn», який визначає напрямок робота з простим приводом на два колеса (враховуючи, що останній двигун встановлений зліва).
        Двигуни будуть синхронізовані, що означає, що якщо один двигун відчуває деякий опір і не може підтримувати свою швидкість, інший двигун також буде сповільнюватися або взагалі зупинятися. Це особливо корисно для роботів з двома незалежними колесами, які повинні йти прямо або здійснювати певний поворот.
        Двигуни будуть продовжувати працювати, поки управління не перехопить інша команда.
      </summary>
      <param name="ports">Імена двох моторів (наприклад, "AB" або "CD").</param>
      <param name="speed">Швидкість від -100 (повний вперед) до 100 (повний вперед) швидшого двигуна.</param>
      <param name="turn">Коефіцієнт повороту від -100 (обертання вліво на місці) до 100 (обертання вправо на місці).</param>
    </member>

    <member name="M:ScheduleSteer">
      <summary>
        Вмикає два двигуна для роботи із заданою швидкістю і відносним напрямком.
        Співвідношення визначається параметром «Turn», який визначає напрямок робота з простим приводом на два колеса (враховуючи, що останній двигун встановлений зліва).
        Двигуни будуть синхронізовані, що означає, що якщо один двигун відчуває деякий опір і не може підтримувати свою швидкість, інший двигун також буде сповільнюватися або взагалі зупинятися. Це особливо корисно для роботів з двома незалежними колесами, які повинні йти прямо або здійснювати певний поворот.
        Команда передає управління в програму відразу, не чекає, поки мотор повернеться. Щоб відстежити закінчення відпрацювання команди, використовуйте IsBusy (). Щоб дочекатися кінця, поки мотор закінчить відпрацювання команди - іспольузйте Wait ().
      </summary>
      <param name="ports">Імена двох моторів (наприклад, "AB" або "CD").</param>
      <param name="speed">Швидкість від -100 (повний вперед) до 100 (повний вперед) швидшого двигуна.</param>
      <param name="turn">Коефіцієнт повороту від -100 (обертання вліво на місці) до 100 (обертання вправо на місці).</param>
      <param name="degrees">Кут, на який повинен повернутися швидший мотор.</param>
      <param name="brake">"True", якщо слід загальмувати і утримувати положення моторів після завершення руху.</param>
    </member>

    <member name="M:MoveSteer">
      <summary>
        Включає два двигуна для роботи із заданою швидкістю і відносним напрямком.
        Співвідношення визначається параметром «Turn», який визначає напрямок робота з простим приводом на два колеса (враховуючи, що останній двигун встановлений зліва).
        Двигуни будуть синхронізовані, що означає, що якщо один двигун відчуває деякий опір і не може підтримувати свою швидкість, інший двигун також буде сповільнюватися або взагалі зупинятися. Це особливо корисно для роботів з двома незалежними колесами, які повинні йти прямо або здійснювати певний поворот.
      </summary>
      <param name="ports">Імена двох моторів (наприклад, "AB" або "CD").</param>
      <param name="speed">Швидкість від -100 (повний вперед) до 100 (повний вперед) швидшого двигуна.</param>
      <param name="turn">Коефіцієнт повороту від -100 (обертання вліво на місці) до 100 (обертання вправо на місці).</param>
      <param name="degrees">Кут, на який повинен повернутися швидший мотор.</param>
      <param name="brake">"True", якщо слід загальмувати і утримувати положення моторів після завершення руху.</param>
    </member>

    <member name="M:Invert">
      <summary>
        Інвертує полярність (напрямок) одного або декількох двигунів. Це вплине на всі майбутні команди, які керують цими двигунами, а також інвертуються покази енкодера та швидкості.
        Ця операція дозволяє легко змінити напрям обертання двигуна без зміни решти програми.
        Вам просто потрібно додати одну команду Motor.Invert () на самому початку програми. Зверніть увагу, що далі не можна буде відключити інверсію.
      </summary>
      <param name="ports">Номер порту мотора (ів)</param>
    </member>

    <member name="M:Wait">
      <summary>
        Дочекайтеся, поки мотори не закінчать виконувати команди Schedule, Move.
        Використання цієї команди, як правило, краще, ніж виклик IsBusy () в циклі.
      </summary>
      <param name="ports">Порти моторів</param>
    </member>

  </members>
</doc>