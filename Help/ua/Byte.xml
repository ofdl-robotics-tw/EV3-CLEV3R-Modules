<?xml version="1.0"?>
<doc>
  <members>
    <member name="T:Byte">
      <summary>
        Маніпуляція окремими бітами 8-бітових чисел. Ця бібліотека дозволяє обробляти числа так, якщо б вони були організовані у вигляді 8-бітних цілочисельних значень («байти»). Для цього значення параметра завжди перетворюються в прості байти, потім виконується запитана операція, а потім результат знову трансформується у формат Basic Plus.
        Підтримуються звичайні бітові операції: AND, OR, NOT, XOR, різні зсуви та операції перетворення даних. Зверніть увагу, що ідентифікатори AND та OR є зарезервованими словами Basic Plus, тому ці операції називаються AND_ і OR_.
      </summary>
    </member>
    <member name="M:NOT">
      <summary>
        Побітове NOT.
      </summary>
      <param name="value">Число для заперечення</param>
      <returns>Число, що отримується, коли кожен біт вхідного байта інвертується окремо</returns>
    </member>
    <member name="M:AND_">
      <summary>
        Побітове AND.
      </summary>
      <param name="a">Перший операнд</param>
      <param name="b">Другий операнд</param>
      <returns>Число, що отримується, коли між кожними битами вхідних чисел виконується логічне «І»</returns>
    </member>
    <member name="M:OR_">
      <summary>
        Побітове OR.
      </summary>
      <param name="a">Перший операнд</param>
      <param name="b">Другий операнд</param>
      <returns>Число, що отримується, коли між кожними битами вхідних чисел виконується логічне «АБО»</returns>
    </member>
    <member name="M:XOR">
      <summary>
        Побітове XOR.
      </summary>
      <param name="a">Перший операнд</param>
      <param name="b">Другий операнд</param>
      <returns>Число, що отримується, коли між кожними битами вхідних чисел виконується виключне «АБО»</returns>
    </member>
    <member name="M:BIT">
      <summary>
        Витягує один біт з байта.
      </summary>
      <param name="value">Байтове число, з якого витягується біт</param>
      <param name="index">Позиція біта всередині байта</param>
      <returns>Біт у зазначеній позиції, що дорівнює 0 або 1</returns>
    </member>
    <member name="M:SHL">
      <summary>
        Побітовий зсув вліво.
      </summary>
      <param name="value">Байт, чиї біти будуть зсунуті</param>
      <param name="distance">На скільки позицій будуть зсунуті біти</param>
      <returns>Число, яке ви отримуєте після переміщення кожного біта вхідного значення в сторону більш значущих позицій</returns>
    </member>
    <member name="M:SHR">
      <summary>
        Побітовій зсув вправо.
      </summary>
      <param name="value">Байт, чиї біти будуть зсунуті</param>
      <param name="distance">На скільки позицій будуть зсунуті біти</param>
      <returns>Число, яке ви отримуєте після переміщення кожного біта вхідного значення в сторону менш значущих позицій</returns>
    </member>
    <member name="M:ToHex">
      <summary>
        Перетворення 8-бітового байта в рядок, що містить двозначне шістнадцяткове число.
      </summary>
      <param name="value">Байт для перетворення в рядок</param>
      <returns>Рядок, що містить двозначне шістнадцяткове число</returns>
    </member>
    <member name="M:ToBinary">
      <summary>
        Перетворення 8-бітового байта в рядок, що містить восьмизначне двійкове число.
      </summary>
      <param name="value">Байт для перетворення в рядок</param>
      <returns>Рядок, що містить восьмизначне двійкове число</returns>
    </member>
    <member name="M:ToLogic">
      <summary>
        Перетворює число (може бути 8-бітним байтом або будь-яким іншим числом) у логічне значення "True" або "False".
        Це значення потім можна використовувати для умови в If або While або ще чого-небудь.
        Зверніть увагу, що будь-яке вхідне значення, що є більшим за нуль, призводить до "True", а вхідне значення, що є рівним нулю або будь-яке від'ємне значення призводить до "False".
      </summary>
      <param name="value">Число, яке має бути перетворене у відповідне логічне значення</param>
      <returns>"True" або "False"</returns>
    </member>
    <member name="M:H">
      <summary>
        Перетворення рядка, що містить шістнадцяткове число, у звичайне число.
      </summary>
      <param name="value">Рядок, що містить байт у вигляді шістнадцяткового числа (Наприклад: "4F")</param>
      <returns>Байт у вигляді числа</returns>
    </member>
    <member name="M:B">
      <summary>
        Перетворення рядка, що містить двійкове число в звичайне число.
      </summary>
      <param name="value">Рядок, що містить байт у вигляді двійкового числа (Наприклад: "01001111")</param>
      <returns>Байт у вигляді числа</returns>
    </member>
    <member name="M:L">
      <summary>
        Перетворення рядка, що містить логічне значення в числові 0 або 1.
      </summary>
      <param name="value">Рядок, що містить логічне значення. Всі, що розрізняються за регістром варіанти "True" ("TRUE", "TrUe", "truE", тощо), вважаються однаковими. Всі інші сприймаються як "False".</param>
      <returns>0 або 1</returns>
    </member>
  </members>
</doc>